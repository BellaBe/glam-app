services:
  # ----------------- Infrastructure Services -----------------
  nats:
    image: nats:2.10.7-alpine
    container_name: glam-nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["nats-server", "-m", "8222", "-js", "--store_dir", "/data"]
    volumes:
      - nats-data:/data
    networks:
      - glam-net
    healthcheck:
      test: ["CMD", "nats-server", "-v"]
      interval: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: glam-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    networks:
      - glam-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s

  # ----------------- Catalog Service -----------------
  catalog-db:
    image: postgres:15-alpine
    container_name: catalog-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${CATALOG_DB_USER}
      POSTGRES_PASSWORD: ${CATALOG_DB_PASSWORD}
      POSTGRES_DB: ${CATALOG_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - catalog-db-data:/var/lib/postgresql/data
    networks:
      - glam-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CATALOG_DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 10s

  catalog-service:
    build:
      context: .
      dockerfile: services/catalog-service/Dockerfile
      args:
        CACHE_BUSTER: ${CACHE_BUSTER:-1}
    container_name: catalog-service
    depends_on:
      nats:
        condition: service_healthy
      catalog-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # Database
      DB_USER: ${CATALOG_DB_USER}
      DB_PASSWORD: ${CATALOG_DB_PASSWORD}
      DB_NAME: ${CATALOG_DB_NAME}
      DB_HOST: catalog-db
      DB_PORT: 5432
      # NATS
      NATS_URL: nats://nats:4222
      # Redis
      REDIS_URL: redis://redis:6379
      # Service
      SERVICE_NAME: catalog-service
      EXTERNAL_PORT: 8001
      JWT_SECRET: ${JWT_SECRET}
      APP_ENV: ${APP_ENV:-prod}
    ports:
      - "8001:8000"
    networks:
      - glam-net

  # ----------------- Catalog Job Processor -----------------
  catalog-job-processor-db:
    image: postgres:15-alpine
    container_name: catalog-job-processor-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${CATALOG_JOB_PROCESSOR_DB_USER}
      POSTGRES_PASSWORD: ${CATALOG_JOB_PROCESSOR_DB_PASSWORD}
      POSTGRES_DB: ${CATALOG_JOB_PROCESSOR_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - catalog-job-processor-db-data:/var/lib/postgresql/data
    networks:
      - glam-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CATALOG_JOB_PROCESSOR_DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 10s

  catalog-job-processor:
    build:
      context: .
      dockerfile: services/catalog-job-processor/Dockerfile
      args:
        CACHE_BUSTER: ${CACHE_BUSTER:-1}
    container_name: catalog-job-processor
    depends_on:
      nats:
        condition: service_healthy
      catalog-job-processor-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # Database
      DB_USER: ${CATALOG_JOB_PROCESSOR_DB_USER}
      DB_PASSWORD: ${CATALOG_JOB_PROCESSOR_DB_PASSWORD}
      DB_NAME: ${CATALOG_JOB_PROCESSOR_DB_NAME}
      DB_HOST: catalog-job-processor-db
      DB_PORT: 5432
      # NATS
      NATS_URL: nats://nats:4222
      # Redis
      REDIS_URL: redis://redis:6379
      # Service
      SERVICE_NAME: catalog-job-processor
      APP_ENV: ${APP_ENV:-prod}
    networks:
      - glam-net

  # ----------------- Catalog Connector -----------------
  catalog-connector:
    build:
      context: .
      dockerfile: services/catalog-connector/Dockerfile
      args:
        CACHE_BUSTER: ${CACHE_BUSTER:-1}
    container_name: catalog-connector
    depends_on:
      nats:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # NATS
      NATS_URL: nats://nats:4222
      # Redis (for rate limiting)
      REDIS_URL: redis://redis:6379
      # Shopify
      SHOPIFY_API_VERSION: ${SHOPIFY_API_VERSION}
      # Service
      SERVICE_NAME: catalog-connector
      APP_ENV: ${APP_ENV:-prod}
    networks:
      - glam-net

  # ----------------- Catalog Image Cache -----------------
  catalog-image-cache:
    build:
      context: .
      dockerfile: services/catalog-image-cache/Dockerfile
      args:
        CACHE_BUSTER: ${CACHE_BUSTER:-1}
    container_name: catalog-image-cache
    depends_on:
      nats:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # NATS
      NATS_URL: nats://nats:4222
      # Redis
      REDIS_URL: redis://redis:6379
      # Local Storage
      CACHE_DIR: /app/image-cache
      CACHE_MAX_SIZE_GB: ${CACHE_MAX_SIZE_GB:-100}
      CACHE_CLEANUP_SCHEDULE: "0 2 * * *"  # 2 AM daily
      CACHE_TTL_HOURS: 24
      # Service
      SERVICE_NAME: catalog-image-cache
      APP_ENV: ${APP_ENV:-prod}
    networks:
      - glam-net
    volumes:
      - catalog-image-cache:/app/image-cache

  # ----------------- Catalog AI Apparel Service -----------------
  catalog-ai-apparel:
    build:
      context: .
      dockerfile: services/catalog-ai-apparel/Dockerfile
      args:
        CACHE_BUSTER: ${CACHE_BUSTER:-1}
    container_name: catalog-ai-apparel
    depends_on:
      nats:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # NATS
      NATS_URL: nats://nats:4222
      # Redis
      REDIS_URL: redis://redis:6379
      # AI Model
      MODEL_PATH: ${MODEL_PATH:-/app/models}
      MODEL_VERSION: ${MODEL_VERSION:-resnet50_v3}
      GPU_ENABLED: ${GPU_ENABLED:-false}
      # Service
      SERVICE_NAME: catalog-ai-apparel
      APP_ENV: ${APP_ENV:-prod}
    networks:
      - glam-net
    volumes:
      - ai-apparel-models:/app/models
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

networks:
  glam-net:
    driver: bridge

volumes:
  nats-data:
  redis-data:
  catalog-db-data:
  catalog-job-processor-db-data:
  catalog-image-cache:
  ai-apparel-models: