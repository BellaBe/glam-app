version: '3.8'

services:
  webhook-service:
    build: .
    ports:
      - "8112:8012"      # External dev port : Internal port
      - "9092:9090"      # Metrics
    environment:
      - DATABASE_URL=postgresql://webhook:password@postgres:5432/webhook_db
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - LOG_LEVEL=INFO
      - DEBUG=false
      - DOCKER_CONTAINER=1
      - SHOPIFY_API_SECRET=your-shopify-webhook-secret
      - SHOPIFY_API_SECRET_NEXT=your-rotation-secret  # Optional
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    volumes:
      - ./src:/app/src  # Hot reload
      - ./config:/app/config  # Mount config
    networks:
      - webhook-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8012/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: webhook_db
      POSTGRES_USER: webhook
      POSTGRES_PASSWORD: password
    ports:
      - "5412:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - webhook-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U webhook -d webhook_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6312:6379"
    volumes:
      - redis_data:/data
    networks:
      - webhook-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2.10-alpine
    ports:
      - "4212:4222"
      - "8212:8222"  # HTTP monitoring
    command: [
      "nats-server",
      "--jetstream",
      "--store_dir=/data",
      "--http_port=8222"
    ]
    volumes:
      - nats_data:/data
    networks:
      - webhook-network

volumes:
  postgres_data:
  redis_data:
  nats_data:

networks:
  webhook-network:
    driver: bridge


