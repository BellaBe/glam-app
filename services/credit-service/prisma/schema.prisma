// services/credit-service/prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

model CreditAccount {
  id                String   @id @default(uuid()) @db.Uuid
  merchant_id       String   @unique @db.Uuid

  // Platform context (immutable after creation)
  platform_name     String   // 'shopify', 'woocommerce', etc
  platform_shop_id       String   // Platform-specific ID (e.g., shop_gid for Shopify)
  shop_domain   String   // e.g., 'example.myshopify.com'

  // Balance tracking
  balance           Int      @default(0)  // Current credits (never negative)
  total_granted     Int      @default(0)  // Lifetime credits received
  total_consumed    Int      @default(0)  // Lifetime credits used

  created_at        DateTime @default(now()) @db.Timestamptz(3)
  updated_at        DateTime @updatedAt @db.Timestamptz(3)

  @@index([merchant_id])
  @@index([shop_domain])
  @@index([platform_name, platform_shop_id])
  @@map("credit_accounts")
}

model CreditTransaction {
  id                String   @id @default(uuid()) @db.Uuid
  account_id        String   @db.Uuid
  merchant_id       String   @db.Uuid

  // Transaction details
  amount            Int      // Always positive
  operation         String   // 'credit' or 'debit'
  balance_before    Int      // Balance before transaction
  balance_after     Int      // Balance after transaction

  // Reference for idempotency
  reference_type    String   // 'trial', 'purchase', 'match', etc
  reference_id      String   // Unique ID from source

  // Metadata
  description       String?
  metadata          Json?    // Additional context (match_id, shopper_id, etc)

  created_at        DateTime @default(now()) @db.Timestamptz(3)

  @@index([merchant_id, created_at])
  @@unique([reference_type, reference_id])  // Prevents duplicates
  @@map("credit_transactions")
}
