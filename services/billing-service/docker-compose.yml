version: '3.8'

services:
  billing-service:
    build: .
    ports:
      - "8016:8000"    # Internal service port
      - "8116:8000"    # External development port
      - "9090:9090"    # Metrics
    environment:
      - DATABASE_URL=postgresql://billing:password@postgres:5432/billing_db
      - REDIS_URL=redis://redis:6379
      - NATS_URL=nats://nats:4222
      - LOG_LEVEL=INFO
      - DEBUG=false
      - DOCKER_CONTAINER=1
      - BILLING_API_KEY=${BILLING_API_KEY}
      - BILLING_ADMIN_API_KEY=${BILLING_ADMIN_API_KEY}
      - APP_HANDLE=${APP_HANDLE}
      - SHOPIFY_MANAGED_CHECKOUT_BASE=${SHOPIFY_MANAGED_CHECKOUT_BASE}
      - ALLOWED_RETURN_DOMAINS=${ALLOWED_RETURN_DOMAINS}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_started
    volumes:
      - ./src:/app/src  # Hot reload
      - ./config:/app/config  # Mount config
    networks:
      - billing-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: billing_db
      POSTGRES_USER: billing
      POSTGRES_PASSWORD: password
    ports:
      - "5416:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - billing-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U billing -d billing_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6316:6379"
    volumes:
      - redis_data:/data
    networks:
      - billing-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2.10-alpine
    ports:
      - "4216:4222"
      - "8216:8222"  # HTTP monitoring
    command: [
      "nats-server",
      "--jetstream",
      "--store_dir=/data",
      "--http_port=8222"
    ]
    volumes:
      - nats_data:/data
    networks:
      - billing-network

volumes:
  postgres_data:
  redis_data:
  nats_data:

networks:
  billing-network:
    driver: bridge

