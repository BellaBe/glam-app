// services/notification-service/prisma/schema.prisma
generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Notification {
  id                  String    @id @default(uuid()) @db.Uuid

  // Full merchant identification
  merchant_id         String    @db.Uuid
  platform_name       String    @db.VarChar(255)
  platform_shop_id         String    @db.VarChar(255)
  shop_domain     String    @db.VarChar(255)

  // Email details
  recipient_email     String    @db.VarChar(255)
  template_type       String    @db.VarChar(100)
  subject            String    @db.Text

  // Delivery status
  status             String    @default("pending") @db.VarChar(50) // pending, sent, failed, bounced
  provider           String?   @db.VarChar(50) // 'sendgrid', 'mailhog'
  provider_message_id String?  @unique @db.VarChar(255)

  // Error tracking
  error_message      String?   @db.Text
  retry_count        Int       @default(0)

  // Event tracking
  trigger_event      String    @db.VarChar(255)
  trigger_event_id   String?   @db.VarChar(100)
  idempotency_key    String    @unique @db.VarChar(255)

  // Metadata
  template_variables Json?     @db.Json
  extra_metadata     Json?     @db.Json

  // Timestamps
  created_at         DateTime  @default(now()) @db.Timestamptz(3)
  sent_at           DateTime? @db.Timestamptz(3)
  failed_at         DateTime? @db.Timestamptz(3)

  @@index([merchant_id, created_at])
  @@index([platform_name, platform_shop_id])
  @@index([shop_domain])
  @@index([status])
  @@index([template_type])
  @@index([idempotency_key])
  @@map("notifications")
}
