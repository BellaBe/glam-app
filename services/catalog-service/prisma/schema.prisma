generator client {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MerchantCatalogState {
  shopDomain       String   @id @db.Citext
  
  // Cached from evt.merchant.settings.updated
  dataAccess       Boolean  @default(false)
  autoSync         Boolean  @default(false)
  tosAccepted      Boolean  @default(false)
  
  // Cached from evt.billing.entitlements.changed
  entitled         Boolean  @default(false)
  
  // Operational state
  hasSyncedBefore  Boolean  @default(false)
  activeSyncId     String?  // null when no active sync
  lastSyncAt       DateTime?
  
  updatedAt        DateTime @updatedAt
  createdAt        DateTime @default(now())
  
  @@map("merchant_catalog_states")
}

model SyncJob {
  id                String    @id @default(cuid())
  shopDomain        String    @db.Citext
  type              String    // "full" (incremental out of scope)
  status            String    // "queued" | "running" | "synced" | "failed"
  analysisStatus    String    // "idle" | "requested" | "analyzing" | "analyzed" | "failed"
  
  // Progress tracking
  totalProducts     Int       @default(0)
  totalVariants     Int       @default(0)  // From catalog.counted event
  processedProducts Int       @default(0)  // Derived from completed analysis
  submittedItems    Int       @default(0)  // Analysis requests sent
  completedItems    Int       @default(0)  // Successful analysis
  failedItems       Int       @default(0)  // Failed analysis
  
  errorMessage      String?
  startedAt         DateTime  @default(now())
  finishedAt        DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@index([shopDomain, createdAt])
  @@index([shopDomain, status])
  @@unique([shopDomain, status]) // Ensures single active sync
  @@map("sync_jobs")
}

// Optional: Operational visibility (not exposed to FE)
model SyncItem {
  id          String   @id @default(cuid())
  syncId      String
  shopDomain  String   @db.Citext
  productId   String
  variantId   String
  imageUrl    String
  status      String   // "queued" | "submitted" | "completed" | "failed"
  error       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([syncId, status])
  @@index([syncId, variantId])
  @@unique([syncId, variantId]) // Prevent duplicate processing
  @@map("sync_items")
}

# ================================================================
