# docker-compose.local.yml
# Infrastructure services only for local development
# Run application services locally with 'make run-service SERVICE=xxx'
services:
  # ----------------- Message Broker -----------------
  nats:
    image: nats:2.10.7-alpine
    container_name: glam-nats-local
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # Monitoring
    command: ["nats-server", "-m", "8222", "-js", "--store_dir", "/data"]
    volumes:
      - nats-local-data:/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD", "nats-server", "-v"]
      interval: 10s
      retries: 5
      start_period: 10s

  # ----------------- Cache -----------------
  redis:
    image: redis:7-alpine
    container_name: glam-redis-local
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-local-data:/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s

  # ----------------- Catalog Database -----------------
  catalog-db:
    image: postgres:15-alpine
    container_name: catalog-db-local
    environment:
      POSTGRES_USER: catalog_user
      POSTGRES_PASSWORD: catalog_pass
      POSTGRES_DB: catalog_db
    ports:
      - "5432:5432"
    volumes:
      - catalog-db-local-data:/var/lib/postgresql/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catalog_user"]
      interval: 10s
      retries: 5
      start_period: 10s

  # ----------------- Catalog Job Processor Database -----------------
  catalog-job-processor-db:
    image: postgres:15-alpine
    container_name: catalog-job-processor-db-local
    environment:
      POSTGRES_USER: job_processor_user
      POSTGRES_PASSWORD: job_processor_pass
      POSTGRES_DB: job_processor_db
    ports:
      - "5433:5432"
    volumes:
      - catalog-job-processor-db-local-data:/var/lib/postgresql/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U job_processor_user"]
      interval: 10s
      retries: 5
      start_period: 10s

  # ----------------- Profile Database -----------------
  profile-db:
    image: postgres:15-alpine
    container_name: profile-db-local
    environment:
      POSTGRES_USER: profile_user
      POSTGRES_PASSWORD: profile_pass
      POSTGRES_DB: profile_db
    ports:
      - "5434:5432"
    volumes:
      - profile-db-local-data:/var/lib/postgresql/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U profile_user"]
      interval: 10s
      retries: 5
      start_period: 10s

  # ----------------- S3-compatible Storage (MinIO) -----------------
  minio:
    image: minio/minio:latest
    container_name: glam-minio-local
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-local-data:/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # ----------------- MinIO Client (Setup buckets) -----------------
  minio-setup:
    image: minio/mc:latest
    container_name: glam-minio-setup-local
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/glamyouup-selfies || true;
      /usr/bin/mc mb myminio/glamyouup-images || true;
      /usr/bin/mc anonymous set public myminio/glamyouup-images;
      exit 0;
      "
    networks:
      - glam-local-net

  # ----------------- Monitoring (Optional) -----------------
  # Uncomment if you want local monitoring
  # nats-exporter:
  #   image: natsio/prometheus-nats-exporter:latest
  #   container_name: glam-nats-exporter-local
  #   command: ["-varz", "http://nats:8222"]
  #   ports:
  #     - "7777:7777"
  #   networks:
  #     - glam-local-net
  #   depends_on:
  #     - nats

networks:
  glam-local-net:
    driver: bridge

volumes:
  nats-local-data:
  redis-local-data:
  catalog-db-local-data:
  catalog-job-processor-db-local-data:
  profile-db-local-data:
  minio-local-data: