# docker-compose.local.yml
# Infrastructure services only for local development
# Run application services locally with 'make run SERVICE=xxx'

services:
  # ----------------- Message Broker -----------------
  nats:
    image: nats:2.10.7-alpine
    container_name: glam-nats-local
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # Monitoring
    command: ["nats-server", "-m", "8222", "-js", "--store_dir", "/data"]
    volumes:
      - nats-local-data:/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD", "nats-server", "-v"]
      interval: 10s
      retries: 5
      start_period: 10s

  # ----------------- Email Testing (MailHog) -----------------
  mailhog:
    image: mailhog/mailhog:latest
    container_name: glam-mailhog-local
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - glam-local-net
    logging:
      driver: 'none'  # Disable excessive logging
    healthcheck:
      test: ["CMD", "echo", "mailhog is running"]
      interval: 10s
      retries: 5
      start_period: 5s

  # ----------------- Webhook Database -----------------
  webhook-db:
    image: postgres:15-alpine
    container_name: webhook-db-local
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${WEBHOOK_DB_USER}
      POSTGRES_PASSWORD: ${WEBHOOK_DB_PASSWORD}
      POSTGRES_DB: ${WEBHOOK_DB_NAME}
    ports:
      - "${WEBHOOK_DB_PORT_EXTERNAL}:5432"
    volumes:
      - webhook-db-local-data:/var/lib/postgresql/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${WEBHOOK_DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 10s

  # ----------------- Merchant Database -----------------
  merchant-db:
    image: postgres:15-alpine
    container_name: merchant-db-local
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${MERCHANT_DB_USER}
      POSTGRES_PASSWORD: ${MERCHANT_DB_PASSWORD}
      POSTGRES_DB: ${MERCHANT_DB_NAME}
    ports:
      - "${MERCHANT_DB_PORT_EXTERNAL}:5432"  # Fixed: added $
    volumes:
      - merchant-db-local-data:/var/lib/postgresql/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${MERCHANT_DB_USER}"]  # Fixed: use correct var
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  # ----------------- Catalog Database -----------------
  catalog-db:
    image: postgres:15-alpine
    container_name: catalog-db-local
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${CATALOG_DB_USER}
      POSTGRES_PASSWORD: ${CATALOG_DB_PASSWORD}
      POSTGRES_DB: ${CATALOG_DB_NAME}
    ports:
      - "${CATALOG_DB_PORT_EXTERNAL}:5432"
    volumes:
      - catalog-db-local-data:/var/lib/postgresql/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CATALOG_DB_USER}"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  # ----------------- Notification Database -----------------
  notification-db:
    image: postgres:15-alpine
    container_name: notification-db-local
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${NOTIFICATION_DB_USER}
      POSTGRES_PASSWORD: ${NOTIFICATION_DB_PASSWORD}
      POSTGRES_DB: ${NOTIFICATION_DB_NAME}
    ports:
      - "${NOTIFICATION_DB_PORT_EXTERNAL}:5432"
    volumes:
      - notification-db-local-data:/var/lib/postgresql/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${NOTIFICATION_DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 10s

  # ----------------- Credit Database -----------------
  credit-db:
    image: postgres:15-alpine
    container_name: credit-db-local
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${CREDIT_DB_USER}
      POSTGRES_PASSWORD: ${CREDIT_DB_PASSWORD}
      POSTGRES_DB: ${CREDIT_DB_NAME}
    ports:
      - "${CREDIT_DB_PORT_EXTERNAL}:5432"
    volumes:
      - credit-db-local-data:/var/lib/postgresql/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CREDIT_DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 10s


  # ----------------- Billing Database -----------------
  billing-db:
    image: postgres:15-alpine
    container_name: billing-db-local
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${BILLING_DB_USER}
      POSTGRES_PASSWORD: ${BILLING_DB_PASSWORD}
      POSTGRES_DB: ${BILLING_DB_NAME}
    ports:
      - "${BILLING_DB_PORT_EXTERNAL}:5432"
    volumes:
      - billing-db-local-data:/var/lib/postgresql/data
    networks:
      - glam-local-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${BILLING_DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 10s

networks:
  glam-local-net:
    driver: bridge

volumes:
  nats-local-data:
  catalog-db-local-data:
  notification-db-local-data:
  credit-db-local-data:
  webhook-db-local-data:
  merchant-db-local-data:
  billing-db-local-data:
